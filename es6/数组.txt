Array.push() 此方法是在数组的后面添加新加元素，此方法改变了数组的长度：
Array.pop() 此方法在数组后面删除最后一个元素，并返回数组，此方法改变了数组的长度：
Array.shift() 此方法在数组后面删除第一个元素，并返回数组，此方法改变了数组的长度：
Array.unshift()
Array.isArray() 判断一个对象是不是数组，返回的是布尔值
Array.concat() 此方法是一个可以将多个数组拼接成一个数组：
Array.splice(开始位置下标数， 删除的个数，元素)　万能方法，可以实现增删改：
Array.slice(开始位置的下标数，结束位置的下标数)返回从原数组中指定开始下标到结束下标之间的项组成的新数组，但不包括结束位置的项
Array.reverse()反转数组项的顺序。

Array.join() 此方法将数组转化为字符串：参数为拼接符
String.split()此方法将数组转化为字符串：参数为分割符

    function compare(value1,value2){
        if(value1 < value2){
            return -1;
        }else if(value1 == value2){
            return 0;
        }else{
            return 1;
        }
    }//从小到大
arr.sort(compare)
数组排序


for...of...循环：
	arr.keys();数组的下标
	arr.entries();数组的某一项
数组复制，可以用扩展运算符（...）：
	arr2=[...arr1];
也可以这样将伪数组转换为数组，然后就可以使用数组方法。
//之前使用[].slice.call(类数组)将数组转化为真正的Array对象。

form:
Array.form(类数组/数组):把类数组对象转成数组
of:
Array.of(一组值)：把一组值转换为数组

find:
arr.find():找到第一个符合条件的。没有找到返回undefined
	参数为一个回调函数：(val,index,arr) => { return val == xxx}
arr.findindex():找到第一个符合条件的位置。没有找到返回-1,用法与上一致

arr.fill():填充
	arr.fill(填充的东西，开始位.索引，结束位.实际位置)
arr.includes(xxx):是否包含xxx，和str.includes()差不多。
	

------------------------------------------------------------------------------------

ES5新增的循环
arr.forEach()//代替for循环的
		arr.forEach((val,index,arr)=>{//没有返回值
			console.log(val,index,arr);
		})
《--------》
arr.map()
	let newArr = arr.map((val,index,arr)=>{//有返回值，返回的是一个新的数组
			console.log(val,index,arr);
			return 1
		})
	最后newArr为[1,1,...]
	若map()中的回调函数没有return，则与forEach一样。
《--------》
arr.filter()//过滤，回调函数返回值为ture则留下，其余被过滤掉
	let newArr = arr.folter((val,index,arr)=>{//有返回值，返回的是一个新的数组
			return var == false
		})
	最后newArr是val为false所构成的新数组
《--------》
arr.some()//类似查找，数组里面某一个元素符合条件，就返回true
	let newArr = arr.some((val,index,arr)=>{//有返回值，返回的boolena值
			return var == 'apple'
		})
//在ES6中，find比some更好用
《--------》
arr.ever()//数组里面所有元素都要符合条件，才返回true
	用法和some类似
====================================================================
以上方法都可以接收两个参数：
	第一个参数为回调函数//回调函数中三个参数//val,index,arr
	第二个参数为this指向//可选参数//箭头函数中，第二个参数不能更改this指向
====================================================================
	arr.reduce()
	arr.reduceRight()